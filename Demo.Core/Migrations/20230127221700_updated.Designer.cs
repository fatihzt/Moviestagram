// <auto-generated />
using System;
using Demo.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Demo.Core.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230127221700_updated")]
    partial class updated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Demo.Entity.CommentedFavoriteList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CommentBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FavoriteListId")
                        .HasColumnType("int");

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.Property<int?>("TvSeriesId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CommentedFavoriteList");
                });

            modelBuilder.Entity("Demo.Entity.ItemOfMovieList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FavoriteListId")
                        .HasColumnType("int");

                    b.Property<int?>("MovieFavoriteListId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovieFavoriteListId");

                    b.ToTable("ItemOfMovieList");
                });

            modelBuilder.Entity("Demo.Entity.ItemOfTvList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FavoriteListId")
                        .HasColumnType("int");

                    b.Property<int>("TvId")
                        .HasColumnType("int");

                    b.Property<int?>("TvSeriesFavoriteListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TvSeriesFavoriteListId");

                    b.ToTable("ItemOfTvList");
                });

            modelBuilder.Entity("Demo.Entity.LikedFavoriteList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FavoriteListId")
                        .HasColumnType("int");

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.Property<int?>("TvSeriesId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LikedFavoriteList");
                });

            modelBuilder.Entity("Demo.Entity.MovieFavoriteList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ItemOfMovieListId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemOfMovieListId");

                    b.HasIndex("UserId");

                    b.ToTable("MovieFavoriteList");
                });

            modelBuilder.Entity("Demo.Entity.TvSeriesFavoriteList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemOfTvListId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemOfTvListId");

                    b.HasIndex("UserId");

                    b.ToTable("TvSeriesFavoriteList");
                });

            modelBuilder.Entity("Demo.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Demo.Entity.ItemOfMovieList", b =>
                {
                    b.HasOne("Demo.Entity.MovieFavoriteList", null)
                        .WithMany("ItemsOfMovieList")
                        .HasForeignKey("MovieFavoriteListId");
                });

            modelBuilder.Entity("Demo.Entity.ItemOfTvList", b =>
                {
                    b.HasOne("Demo.Entity.TvSeriesFavoriteList", null)
                        .WithMany("ItemsOfTvList")
                        .HasForeignKey("TvSeriesFavoriteListId");
                });

            modelBuilder.Entity("Demo.Entity.MovieFavoriteList", b =>
                {
                    b.HasOne("Demo.Entity.ItemOfMovieList", "ItemOfMovieList")
                        .WithMany()
                        .HasForeignKey("ItemOfMovieListId");

                    b.HasOne("Demo.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemOfMovieList");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Demo.Entity.TvSeriesFavoriteList", b =>
                {
                    b.HasOne("Demo.Entity.ItemOfTvList", "ItemOfTvList")
                        .WithMany()
                        .HasForeignKey("ItemOfTvListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Demo.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemOfTvList");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Demo.Entity.MovieFavoriteList", b =>
                {
                    b.Navigation("ItemsOfMovieList");
                });

            modelBuilder.Entity("Demo.Entity.TvSeriesFavoriteList", b =>
                {
                    b.Navigation("ItemsOfTvList");
                });
#pragma warning restore 612, 618
        }
    }
}
